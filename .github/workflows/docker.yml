name: docker

on:
    push:
        # publish image as master=dev or on new tag
        # except on document and ci changes
        branches:
            - main
        tags:
            - '*'
        paths-ignore:
            - '**.md'
            - '.github/workflows/*yml'

    # always run tests on merge
    # except on document and ci changes
    pull_request:
        paths-ignore:
            - '**.md'
            - '.github/workflows/*yml'

jobs:
    unit_test:
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        steps:
            - name: Create docker network
              run: docker network create marketplace-network
            - name: Check out Site Repository ðŸ“„
              uses: actions/checkout@v2
            - name: Create .env file
              run: cp .env.example .env
            - name: Replace hosts with MySQL IP address
              run: sed -i 's/MYSQL_HOST.*/MYSQL_HOST=172.18.0.2/g' .env
            - name: Import environment variables from a file
              id: import-env
              shell: bash
              run: |
                while read line; do
                  echo "$line" >> $GITHUB_ENV
                  done < .env
            - name: Create MySQL container
              run: |
                  docker run --name marketplace-mysql \
                    --network marketplace-network \
                    -p ${{ env.MYSQL_PORT }}:${{ env.MYSQL_PORT }} \
                    -e MYSQL_ALLOW_EMPTY_PASSWORD=yes \
                    -e MYSQL_DATABASE=${{ env.MYSQL_DATABASE }} \
                    -d mysql:8 \
                    mysql -uroot \
                    -e "CREATE USER '${{ env.MYSQL_USER }}' IDENTIFIED WITH mysql_native_password BY '${{ env.MYSQL_PASSWORD }}'; \
                    GRANT ALL PRIVILEGES ON '${{ env.MYSQL_DATABASE }}'.* TO '${{ env.MYSQL_USER }}';"
            - name: Start MySQL container
              run: docker container start marketplace-mysql
            - name: Check MySQL container availability
              run: |
                  until docker exec -it marketplace-mysql mysqladmin ping -P 3306 | grep "mysqld is alive" ; do
                    >&2 echo "MySQL is unavailable - waiting for it... ðŸ˜´"
                    sleep 1
                  done
            - name: Build docker image
              run: docker build -t marketplace_shop_products .
            - name: Running unit test
              run: docker-compose up products-unit-test