name: docker

on:
    push:
        # publish image as master=dev or on new tag
        # except on document and ci changes
        branches:
            - master
        tags:
            - '*'
        paths-ignore:
            - '**.md'
            - '.github/workflows/*yml'

    # always run tests on merge
    # except on document and ci changes
    pull_request:
        paths-ignore:
            - '**.md'
            - '.github/workflows/*yml'

env:
    ENV_FILE: .env
    MYSQL_ROOT_PASSWORD: root

jobs:
    unit_test:
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        steps:
            - name: Create docker network
              run: docker network create marketplace-network
            - name: Get docker network gateway IP address
              id: docker-network
              run: echo "::set-output name=gateway-ip-address::$(docker network inspect marketplace-network -f '{{range .IPAM.Config}}{{.Gateway}}{{end}}')"
            - name: Check out Site Repository ðŸ“„
              uses: actions/checkout@v2
            - name: Create .env file
              run: cp .env.example .env
            - name: Replace hosts with docker network IP address
              run: sed -i 's/MYSQL_HOST.*/MYSQL_HOST='${{ steps.docker-network.outputs.gateway-ip-address }}'/g' .env
            - name: Print env variables
              run: cat .env
            - name: Import environment variables from a file
              id: import-env
              shell: bash
              run: |
                while read line; do
                  echo "$line" >> $GITHUB_ENV
                  done < ${{ env.ENV_FILE }}
            - name: Create MySQL container
              run: |
                docker run --name marketplace-mysql \
                  --network marketplace-network \
                  -p ${MYSQL_PORT}:${MYSQL_PORT} \
                  -e MYSQL_ROOT_PASSWORD={$MYSQL_ROOT_PASSWORD} \
                  -e MYSQL_DATABASE={$MYSQL_DATABASE} \
                  -d mysql:8 \
                  mysql -uroot -p{$MYSQL_ROOT_PASSWORD} \
                  -e "CREATE USER '{$MYSQL_USER}' IDENTIFIED WITH mysql_native_password BY '{$MYSQL_PASSWORD}'; \
                    GRANT ALL PRIVILEGES ON shop_products.* TO phalcon;"
            - name: Running unit test
              run: docker-compose up products-unit-test