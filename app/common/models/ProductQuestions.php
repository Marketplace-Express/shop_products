<?php

namespace app\common\models;


/**
 * ProductQuestions
 * 
 * @package app\common\models
 * @autogenerated by Phalcon Developer Tools
 * @date 2019-01-13, 09:24:22
 */
class ProductQuestions extends BaseModel
{

    const MODEL_ALIAS = 'pq';

    /**
     * @var string
     * @Primary
     * @Column(column='question_id', type='string', length=36)
     */
    public $questionId;

    /**
     * @var string
     * @Column(column='product_id', type='string', length=36)
     */
    public $productId;

    /**
     *
     * @var string
     * @Column(column='question_user_id', type='string', length=36)
     */
    public $questionUserId;

    /**
     *
     * @var string
     * @Column(column='question_text', type='text')
     */
    public $questionText;

    /**
     *
     * @var string
     * @Column(column='created_at', type='datetime')
     */
    public $createdAt;

    /**
     *
     * @var string
     * @Column(column='deleted_at', type='datetime', nullable=true)
     */
    public $deletedAt;

    /**
     * @var integer
     * @Column(column='is_deleted', type='boolean', default=0)
     */
    public $isDeleted;

    public function onConstruct()
    {
        self::$instance = $this;
    }

    /**
     * Initialize method for model.
     * @throws \Exception
     */
    public function initialize()
    {
        $this->defaultBehavior();

        $this->setSchema('shop_products');
        $this->setSource('product_questions');
        $this->useDynamicUpdate(true);
        $this->belongsTo(
            'questionProductId',
            Product::class,
            'productId',
            [
                'reusable' => true
            ]
        );
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'product_questions';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return ProductQuestions[]|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return ProductQuestions|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return [
            'question_id' => 'questionId',
            'product_id' => 'productId',
            'question_user_id' => 'questionUserId',
            'question_text' => 'questionText',
            'created_at' => 'createdAt',
            'deleted_at' => 'deletedAt',
            'is_deleted' => 'isDeleted'
        ];
    }

    public static function count($parameters = null)
    {
        return count(array_filter([
            self::model()->questionId,
            self::model()->questionUserId,
            self::model()->questionText
        ]));
    }

    public function toApiArray()
    {
        return [
            'questionId' => $this->questionId,
            'productId' => $this->productId,
            'questionUserId' => $this->questionUserId,
            'questionText' => $this->questionText
        ];
    }

}
